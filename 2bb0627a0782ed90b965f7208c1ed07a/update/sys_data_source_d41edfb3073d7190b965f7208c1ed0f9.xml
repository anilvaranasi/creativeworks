<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_data_source">
    <sys_data_source action="INSERT_OR_UPDATE">
        <batch_size>1000</batch_size>
        <category/>
        <connection_alias/>
        <connection_override_last_success_time/>
        <connection_timeout>0</connection_timeout>
        <connection_url/>
        <connection_url_parameters/>
        <csv_delimiter/>
        <data_in_single_column>false</data_in_single_column>
        <data_loader><![CDATA[(function loadData(import_set_table, data_source, import_log, last_success_import_time) {
    //x_146833_creativ_0_appl_file
    var sDebug = 'Log start';
    var fieldValueObj = {};
    try {
        var fieldMapper = {};
        //fieldMapper['u_scope_display_value'] = 'sys_scope';
        fieldMapper['u_scope_display_value'] = 'sys_scope_display';
        fieldMapper['u_editor_name'] = 'sys_class_name';
        fieldMapper['u_target_node'] = 'targetNode';
        fieldMapper['u_edge_label'] = 'edgeIdentifier';
        fieldMapper['u_update_name'] = 'sys_update_name';
        var rowObject = {};
        var rowIndex = 0;
        var fieldList = ['sys_class_name', 'sys_scope', 'sys_update_name'];
        //var inScopeClasses = getAllowedClasses();
        // system dictionary is only added for nodes. 
        //var inScopeClasses = 'sys_security_acl,sys_script_fix,scheduled_import_set,sys_alias,sys_app_application,sys_data_source,sysauto_script,sys_hub_flow,sys_rte_eb_etl_definition,sys_script,sys_script_include,sys_transform_map,sys_user_role,sys_db_object';
        var grMeta = new GlideRecord('sys_metadata');
        var file = '';
        var grFile = new GlideRecord('x_146833_creativ_0_file');
        grFile.orderByDesc('sys_updated_on');
        grFile.query();
        if (grFile.next()) {
            file = grFile.file_application.sys_id + '';
        }
        var appSysId = file;
        //sys_scope=2bb0627a0782ed90b965f7208c1ed07a^sys_class_name=sys_script
        var enQuery = 'sys_scope=' + appSysId + "^sys_class_name!=sys_metadata_delete";
        var anaysisMode = gs.getProperty('x_146833_creativ_0.acw_analysis_mode');
        if (anaysisMode == 'Default') {
            var inScopeClasses = getAllowedClasses();
            enQuery += '^sys_class_name' + 'IN' + inScopeClasses;
        }
        //var enQuery = 'sys_scope=' + appSysId;
        sDebug += "sys_scope=" + appSysId + " enQuery =" + enQuery + "\n";

        grMeta.addEncodedQuery(enQuery);
        grMeta.orderByDesc('sys_class_name');
        grMeta.query();
        while (grMeta.next()) {
            fieldValueObj = {};
            buildEdge(grMeta.getDisplayValue('sys_class_name'), grMeta.sys_name, grMeta.sys_update_name, grMeta.sys_scope, grMeta.getDisplayValue('sys_scope'));
        }
        for (var m in rowObject) {
            var map = {};
            //sDebug += m +'=' + rowObject[m] + "\n";
            var columnObject = rowObject[m];
            for (var t in columnObject) {
                for (var fieldIndex in fieldMapper) {
                    map[fieldIndex] = columnObject[fieldMapper[fieldIndex]];
                    sDebug += fieldIndex + "=" + fieldMapper[fieldIndex] + "=" + columnObject[fieldMapper[fieldIndex]] + "\n";
                }
                sDebug += m + '=' + t + "==" + columnObject[t] + "\n";
            }
            import_set_table.insert(map);
        }
    } catch (e) {
        sDebug = "Exception=" + e;
    }

    function buildEdge(tableName, objectName, updateName, sysscope, scopeDisplay) {
        var targetNode = '';
        var edgeIdentifier = '';
        if (tableName == 'Business Rule') {
            // code block
            try {
                var grTable = new GlideRecord('sys_script');
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.collection + '';
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in business rule edge lookup' + e;
            }
        }
        if (tableName == 'Data Source') {
            try {
                // code block
                var grTable = new GlideRecord('sys_data_source');
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.import_set_table_name.getDisplayValue();
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Data source edge lookup' + e;
            }
        }
        if (tableName == 'Table Transform Map') {
            try {
                // code block
                var grTable = new GlideRecord('sys_transform_map');
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.target_table;
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Data source edge lookup' + e;
            }
        }
        if (tableName == 'Report') {
            try {
                // code block
                var grTable = new GlideRecord('sys_report');
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.table;
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in report edge lookup' + e;
            }
        }
        if (tableName == 'Robust Import Set Transformer') {
            try {
                // code block
                var grTable = new GlideRecord('sys_robust_import_set_transformer');
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.source_table;
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Robust Import Set Transformer edge lookup' + e;
            }
        }
        if (tableName == 'UI Action') {
            try {
                // code block
                var grTable = new GlideRecord('sys_ui_action');
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.table;
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in UI Action edge lookup' + e;
            }
        }
        if (tableName == 'Flow Formatter') {
            try {
                // code block
                var grTable = new GlideRecord('sys_process_flow');
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.table;
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Flow Formatter edge lookup' + e;
            }
        }
        if (tableName == 'Client Script') {
            try {
                // code block
                var grTable = new GlideRecord('sys_script_client');
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.table;
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Client Script edge lookup' + e;
            }
        }

        if (tableName == 'Relationship') {
            try {
                // code block
                var grTable = new GlideRecord('sys_relationship');
                var enQuery = 'name=' + objectName + "^sys_scope=" + sysscope;
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.basic_apply_to + '';
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Relationship edge lookup' + e;
            }
        }


        if (tableName == 'Relationship') {
            try {
                fieldValueObj = {};
                targetNode = '';
                edgeIdentifier = '';
                // code block
                var grTable = new GlideRecord('sys_relationship');
                var enQuery = 'name=' + objectName + "^sys_scope=" + sysscope;
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.basic_query_from + '';
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Relationshio edge lookup' + e;
            }
        }

        if (tableName == 'Table') {
            try {
                // code block
                var grTable = new GlideRecord('sys_db_object');
                var enQuery = 'name=' + objectName + "^sys_scope=" + sysscope;
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.super_class + '';
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Relationshio edge lookup' + e;
            }
        }

        //base table
        if (tableName == 'Dictionary Entry') {
            try {
                // code block
                edgeIdentifier = '';
                targetNode = '';
                var grTable = new GlideRecord('sys_dictionary');
                var enQuery = 'sys_update_name=' + updateName + "^sys_scope=" + sysscope + '^internal_type.label=' + 'reference';
                sDebug += " enQuery base table =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.name + '';
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        sDebug += " grTableObj.sys_update_name base table =" + grTableObj.sys_update_name + "\n";
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier + ''] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Client Script edge lookup' + e;
            }
        }

        // reference

        if (tableName == 'Dictionary Entry') {
            try {
                fieldValueObj = {};
                // code block
                edgeIdentifier = '';
                targetNode = '';
                var grTable = new GlideRecord('sys_dictionary');
                var enQuery = 'sys_update_name=' + updateName + "^sys_scope=" + sysscope + '^internal_type.label=' + 'reference';
                sDebug += " enQuery reference table =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.reference.name + '';
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        sDebug += " grTableObj.sys_update_name reference table =" + grTableObj.sys_update_name + "\n";
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier + ''] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Client Script edge lookup' + e;
            }
        }

        if (tableName == 'Flow') {
            try {
                fieldValueObj = {};
                // code block
                edgeIdentifier = '';
                targetNode = '';
                var grTable = new GlideRecord('sys_flow_context');
                var enQuery = 'name=' + updateName + "^sys_scope=" + sysscope;
                sDebug += " enQuery reference table =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.source_table.name + '';
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        sDebug += " grTableObj.sys_update_name reference table =" + grTableObj.sys_update_name + "\n";
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier + ''] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in Client Script edge lookup' + e;
            }
        }

        if (tableName == 'Action Type') {
            try {
                // code block
                var grTable = new GlideRecord('sys_hub_action_type_definition');
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    var brTableName = grTable.table + '';
                    var grTableObj = new GlideRecord('sys_db_object');
                    grTableObj.addEncodedQuery('name=' + brTableName + "^sys_scope=" + sysscope);
                    grTableObj.query();
                    if (grTableObj.next()) {
                        targetNode = grTableObj.sys_update_name + '';
                        edgeIdentifier = updateName + "|" + targetNode;
                        fieldValueObj['sys_scope'] = sysscope;
                        fieldValueObj['sys_scope_display'] = scopeDisplay;
                        fieldValueObj['sys_class_name'] = tableName;
                        fieldValueObj['sys_update_name'] = updateName + '';
                        fieldValueObj['targetNode'] = targetNode + '';
                        fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                        rowObject[edgeIdentifier] = fieldValueObj;
                    }
                }
            } catch (e) {
                sDebug += 'exception in UI Action edge lookup' + e;
            }
        }
        //ETL Definition to Robust Import Set Transformer
        if (tableName == 'ETL Definition') {
            try {
                // code block
                var grTable = new GlideRecord('sys_robust_import_set_transformer');
                var enQuery = 'robust_transform_engine.name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    targetNode = grTable.sys_update_name + '';
                    edgeIdentifier = updateName + "|" + targetNode;
                    fieldValueObj['sys_scope'] = sysscope;
                    fieldValueObj['sys_scope_display'] = scopeDisplay;
                    fieldValueObj['sys_class_name'] = tableName;
                    fieldValueObj['sys_update_name'] = updateName + '';
                    fieldValueObj['targetNode'] = targetNode + '';
                    fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                    rowObject[edgeIdentifier] = fieldValueObj;
                }
            } catch (e) {
                sDebug += 'exception in ETL Definition edge lookup' + e;
            }
        }
        if (tableName == 'Script Include') {
            // code block
            try {
                var grTable = new GlideRecord('sys_script_include');
                var tableNames = {};
                var enQuery = 'name=' + objectName + '';
                sDebug += " enQuery =" + enQuery + "\n";
                grTable.addEncodedQuery(enQuery);
                grTable.query();
                if (grTable.next()) {
                    tableNames = getTableNames(grTable.script + '');
                    for (var tableNameText in tableNames) {
                        fieldValueObj = {};
                        var brTableName = tableNameText + '';
                        sDebug += ' brTableName = ' + brTableName + "\n";
                        var grTableObj = new GlideRecord('sys_db_object');
                        grTableObj.addQuery('name', brTableName);
                        grTableObj.addQuery('sys_scope', sysscope);
                        grTableObj.query();
                        sDebug += "count=" + grTableObj.getRowCount() + "\n";
                        if (grTableObj.next()) {
                            targetNode = grTableObj.sys_update_name + '';
                            edgeIdentifier = updateName + "|" + targetNode;
                            fieldValueObj['sys_scope'] = sysscope;
                            fieldValueObj['sys_scope_display'] = scopeDisplay;
                            fieldValueObj['sys_class_name'] = tableName;
                            fieldValueObj['sys_update_name'] = updateName + '';
                            fieldValueObj['targetNode'] = targetNode + '';
                            fieldValueObj['edgeIdentifier'] = edgeIdentifier + '';
                            rowObject[edgeIdentifier] = fieldValueObj;
                        }
                    }
                }
            } catch (e) {
                sDebug += 'exception in Script Include edge lookup' + e;
            }
        }
    }

    function getAllowedClasses() {
        var classList = '';
        try {
            var grAlClasses = new GlideRecord('x_146833_creativ_0_allowed_classes');
            grAlClasses.addEncodedQuery('yes_noSTARTSWITHYes');
            grAlClasses.query();
            while (grAlClasses.next()) {
                if (global.JSUtil.nil(classList)) {
                    classList = grAlClasses.classname + '';
                } else {
                    classList += "," + grAlClasses.classname + '';
                }
            }
        } catch (e) {
            sDebug += " Exception in querying class list" + e;
        }
        return classList;
    }

    function getTableNames(script) {
        //var sDebug = 'Logs from script include';
        //var grScInc = new GlideRecord('sys_script_include');
        //grScInc.get('1f9599a90746101054685d3f0ad30002');
        //var scriptString = grScInc.script + '';
        var scriptString = script + '';
        var scriptArray = scriptString.split(' ');
        var stringText = 'GlideRecord';
        var tableArray = {};
        for (var index = 0; index < scriptArray.length; index++) {
            var tableName = '';
            scriptString = scriptArray[index];
            var stringArray = [];
            if (scriptString.indexOf(stringText) > -1 && scriptString.indexOf('.') == -1) {
                stringArray = scriptString.split(stringText);
                scriptString = stringArray[1];
                if (scriptString.indexOf('(') > -1) {
                    stringArray = scriptString.split('(');
                    scriptString = stringArray[1];
                    scriptString = scriptString.replaceAll("'", '');
                    scriptString = scriptString.replaceAll(";", '');
                    scriptString = scriptString.replaceAll(")", '');
                    scriptString = scriptString.trim() + '';
                }
                tableArray[scriptString] = 1;
            }
        }
        return tableArray;
    }
    gs.info(sDebug);
})(import_set_table, data_source, import_log, last_success_import_time);]]></data_loader>
        <data_stream_action/>
        <data_stream_action_inputs/>
        <data_stream_connection_alias/>
        <database_name/>
        <database_port/>
        <discard_arrays>true</discard_arrays>
        <expand_node_children>false</expand_node_children>
        <file_path/>
        <file_retrieval_method>Attachment</file_retrieval_method>
        <format>CSV</format>
        <glide_keystore>false</glide_keystore>
        <header_row>0</header_row>
        <import_set_table_label>edgedata</import_set_table_label>
        <import_set_table_name>x_146833_creativ_0_edgedata</import_set_table_name>
        <instance_name/>
        <jdbc_password/>
        <jdbc_server/>
        <jdbc_user_name/>
        <jdbcprobe_result_set_rows/>
        <jpath_root_node/>
        <last_run_database_field/>
        <last_run_datetime/>
        <last_success_import_time>2023-11-02 17:56:53</last_success_import_time>
        <ldap_target/>
        <ldapprobe_result_set_rows>200</ldapprobe_result_set_rows>
        <limit/>
        <maximum_rows/>
        <mid_server/>
        <name>ACW-Get EdgeData</name>
        <offset>0</offset>
        <oracle_port>1521</oracle_port>
        <oracle_sid>orcl</oracle_sid>
        <parsing_script><![CDATA[// The input value can be accessed through the variables named "line", "lineNumber" and "result"
// The function uses result variable to return parse result back. 
(function(line,lineNumber,result) {
	// add code here
})(line,lineNumber,result);]]></parsing_script>
        <properties/>
        <query>All Rows from Table</query>
        <query_timeout>0</query_timeout>
        <request_action/>
        <scp_authentication>Username and Password</scp_authentication>
        <scp_password/>
        <scp_port/>
        <scp_server/>
        <scp_user_name/>
        <sheet_name>1</sheet_name>
        <sheet_number>0</sheet_number>
        <sql_statement/>
        <ssh_keyfile_path/>
        <support_pagination>false</support_pagination>
        <sys_class_name>sys_data_source</sys_class_name>
        <sys_created_by>adminanil</sys_created_by>
        <sys_created_on>2023-10-17 15:54:08</sys_created_on>
        <sys_id>d41edfb3073d7190b965f7208c1ed0f9</sys_id>
        <sys_mod_count>117</sys_mod_count>
        <sys_name>ACW-Get EdgeData</sys_name>
        <sys_package display_value="AwesomeNowCreativeWorks" source="x_146833_creativ_0">2bb0627a0782ed90b965f7208c1ed07a</sys_package>
        <sys_policy/>
        <sys_scope display_value="AwesomeNowCreativeWorks">2bb0627a0782ed90b965f7208c1ed07a</sys_scope>
        <sys_update_name>sys_data_source_d41edfb3073d7190b965f7208c1ed0f9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-11-02 17:56:56</sys_updated_on>
        <table_name/>
        <type>CUSTOM</type>
        <use_batch_import>false</use_batch_import>
        <use_integrated_authentication>false</use_integrated_authentication>
        <use_last_run_datetime>false</use_last_run_datetime>
        <xpath_root_node/>
        <zipped>false</zipped>
    </sys_data_source>
    <sys_variable_value action="delete_multiple" query="document_key=d41edfb3073d7190b965f7208c1ed0f9"/>
</record_update>
